# Use the latest Rust version
FROM rust:latest AS builder

# Set working directory
WORKDIR /app

# Ensure Cargo is up-to-date
RUN rustup show active-toolchain && rustup update stable && cargo -V

# Install required dependencies
RUN apt-get update && apt-get install -y pkg-config libssl-dev && rm -rf /var/lib/apt/lists/*

# Copy Cargo files first to leverage caching
COPY Cargo.toml Cargo.lock ./

# Regenerate Cargo.lock to ensure compatibility
RUN cargo generate-lockfile

# Copy the source code
COPY src ./src

# Build the application in release mode
RUN cargo build --release

# Step 2: Create a minimal runtime image
FROM debian:bullseye-slim

# Set working directory
WORKDIR /app

# Install necessary runtime dependencies
RUN apt-get update && apt-get install -y ca-certificates && rm -rf /var/lib/apt/lists/*

# Copy only the compiled binary from the builder stage
COPY --from=builder /app/target/release/backend .

# Expose the port
EXPOSE 8080

# Set the command to run the application
CMD ["./backend"]
